- block:
    - name: Check for test tofu files
      ansible.builtin.stat:
        path: "{{ tofu_dir }}"
      register: check_tofu_files

    - when: check_tofu_files.stat.exists
      block:
      - name: Copy tf vars file
        ansible.builtin.copy:
          src: /home/ansible/vars.tf
          dest: "{{ tofu_dir }}vars.tf"
          mode: '0644'

      - name: Provision test workload
        ansible.builtin.include_role:
          name: provisioner/open_tofu
        vars:
          cifmw_tofu_plan_state: present
          cifmw_tofu_project_path: "{{ tofu_dir }}"
          cifmw_tofu_use_remote_project: true
          cifmw_tofu_hosts_pattern: 'undercloud-0'

      - name: Dynamic inventory
        ansible.builtin.include_role:
          name: common/dynamic_inventory

    - name: Run test
      ansible.builtin.include_role:
        name: "tests/{{ test_name }}"

    - name: Add test to passing list
      ansible.builtin.set_fact:
        results: "{{ results | combine({test_name: {'status':'passed', 'additional_info': test_additional_info}}) }}"

  rescue:
    - set_fact:
        results: "{{ results | combine(failed_role) }}"
        failures: "{{ failures + 1 }}"
      vars:
        failed_role: |
          {% filter from_yaml %}
          {{ test_name }}:
            status: failed
            ansible_failed_result: {{ ansible_failed_result.msg }}
            failure_type: {{ ansible_failed_task.action }}
            failure_reason: {{ test_failure_reason }}
          {% endfilter %}

  always:
    - name: Delete test workload
      ansible.builtin.include_role:
        name: provisioner/open_tofu
      vars:
        cifmw_tofu_plan_state: absent
        cifmw_tofu_project_path: "{{ tofu_dir }}"
        cifmw_tofu_use_remote_project: true
        cifmw_tofu_hosts_pattern: 'undercloud-0'
      when: check_tofu_files.stat.exists
